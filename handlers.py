import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from utils import save_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    keyboard = [
        [KeyboardButton("–ü–æ–≤—Ç–æ—Ä—è–π üêí")],
        [KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëΩ")],
        [KeyboardButton("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ üéπ")]  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
    ]
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_html(
        rf"–ü—Ä–∏–≤–µ—Ç {user.mention_html()}! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_message = update.message.text

    if user_message == "–ü–æ–≤—Ç–æ—Ä—è–π üêí":
        context.user_data['repeat_mode'] = True
        await update.message.reply_text("–ü—Ä–∏–Ω—è—Ç–æ! –í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∏–∂–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –∏ —è –ø–æ–≤—Ç–æ—Ä—é –∑–∞ –≤–∞–º–∏, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ/–Ω–∞–ø–∏—à–∏—Ç–µ '–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å' —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.")
        
        keyboard = [[KeyboardButton("–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å üíî")]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:", reply_markup=reply_markup)

    elif user_message == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëΩ":
        await update.message.reply_text("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –æ—Ç https://t.me/helloyaroslav")

    elif user_message == "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ üéπ":
        await update.message.reply_text("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É:", reply_markup=ReplyKeyboardMarkup([[KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")]], resize_keyboard=True))

    elif user_message == "–ü–æ–∫–∞–∑–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É":
        keyboard = [
            [KeyboardButton("–ö–Ω–æ–ø–∫–∞ 1")],
            [KeyboardButton("–ö–Ω–æ–ø–∫–∞ 2")],
            [KeyboardButton("–ù–∞–∑–∞–¥ üîô")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        inline_keyboard = [
            [InlineKeyboardButton("Inline –ö–Ω–æ–ø–∫–∞ 1", callback_data='inline_1')],
            [InlineKeyboardButton("Inline –ö–Ω–æ–ø–∫–∞ 2", callback_data='inline_2')]
        ]
        inline_reply_markup = InlineKeyboardMarkup(inline_keyboard)

        await update.message.reply_text("–û–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞:", reply_markup=reply_markup)
        await update.message.reply_text("–í—Ç–æ—Ä–æ–π —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã", reply_markup=inline_reply_markup)

    elif user_message == "–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å":
        context.user_data['repeat_mode'] = False
        await update.message.reply_text("üî± –†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        
        keyboard = [
            [KeyboardButton("–ü–æ–≤—Ç–æ—Ä—è–π üêí")],
            [KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëΩ")],
            [KeyboardButton("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ üéπ")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

    elif user_message == "–ö–Ω–æ–ø–∫–∞ 1":
        await update.message.reply_text("–í—ã –Ω–∞–∂–∞–ª–∏ –ö–Ω–æ–ø–∫–∞ 1!")

    elif user_message == "–ö–Ω–æ–ø–∫–∞ 2":
        await update.message.reply_text("–í—ã –Ω–∞–∂–∞–ª–∏ –ö–Ω–æ–ø–∫–∞ 2!")

    elif user_message == "–ù–∞–∑–∞–¥ üîô":
        keyboard = [
            [KeyboardButton("–ü–æ–≤—Ç–æ—Ä—è–π üêí")],
            [KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëΩ")],
            [KeyboardButton("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ üéπ")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

    else:
        if context.user_data.get('repeat_mode'):
            await update.message.reply_text(f"–ü—Ä–∏–Ω—è—Ç–æ. {user_message}")
            save_message(user_message)
        else:
            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–º–µ—é—â–∏—Ö—Å—è –∫–Ω–æ–ø–æ–∫ –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")
